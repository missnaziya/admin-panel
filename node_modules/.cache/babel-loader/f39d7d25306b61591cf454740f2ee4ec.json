{"ast":null,"code":"var _jsxFileName = \"/Users/grepixinfotech/Downloads/primer-react-material-design-admin/src/utils/demos/text-fields/FormattedInputs.js\";\n/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n});\nfunction TextMaskCustom(props) {\n  const {\n    inputRef,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MaskedInput, {\n    ...other,\n    ref: inputRef,\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholderChar: '\\u2000',\n    showMask: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = TextMaskCustom;\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumberFormat, {\n    ...other,\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    prefix: \"$\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NumberFormatCustom;\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nclass FormattedInputs extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textmask: '(1  )    -    ',\n      numberformat: '1320'\n    };\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      textmask,\n      numberformat\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"formatted-text-mask-input\",\n          children: \"react-text-mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: textmask,\n          onChange: this.handleChange('textmask'),\n          id: \"formatted-text-mask-input\",\n          inputComponent: TextMaskCustom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.formControl,\n        label: \"react-number-format\",\n        value: numberformat,\n        onChange: this.handleChange('numberformat'),\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(FormattedInputs);\nvar _c, _c2;\n$RefreshReg$(_c, \"TextMaskCustom\");\n$RefreshReg$(_c2, \"NumberFormatCustom\");","map":{"version":3,"names":["React","MaskedInput","NumberFormat","PropTypes","withStyles","Input","InputLabel","TextField","FormControl","jsxDEV","_jsxDEV","styles","theme","container","display","flexWrap","formControl","margin","spacing","TextMaskCustom","props","inputRef","other","ref","mask","placeholderChar","showMask","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","NumberFormatCustom","onChange","getInputRef","onValueChange","values","target","value","thousandSeparator","prefix","_c2","FormattedInputs","Component","constructor","args","state","textmask","numberformat","handleChange","name","event","setState","render","classes","className","children","htmlFor","id","inputComponent","label","InputProps","object","$RefreshReg$"],"sources":["/Users/grepixinfotech/Downloads/primer-react-material-design-admin/src/utils/demos/text-fields/FormattedInputs.js"],"sourcesContent":["/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n});\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={inputRef}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { textmask, numberformat } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n          <Input\n            value={textmask}\n            onChange={this.handleChange('textmask')}\n            id=\"formatted-text-mask-input\"\n            inputComponent={TextMaskCustom}\n          />\n        </FormControl>\n        <TextField\n          className={classes.formControl}\n          label=\"react-number-format\"\n          value={numberformat}\n          onChange={this.handleChange('numberformat')}\n          id=\"formatted-numberformat-input\"\n          InputProps={{\n            inputComponent: NumberFormatCustom,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FormattedInputs);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}