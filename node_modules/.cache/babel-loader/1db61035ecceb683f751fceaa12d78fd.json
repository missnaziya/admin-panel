{"ast":null,"code":"var _jsxFileName = \"/Users/grepixinfotech/Downloads/primer-react-material-design-admin/src/pages/Taskboard/Taskboard.js\",\n  _s = $RefreshSig$();\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport React, { useState } from 'react';\nimport { infoColor, warningColor } from '../../styleVariables';\nimport reorder, { reorderQuoteMap } from './reorder';\nimport Column from './Column';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { mockTaskboard } from '../../utils/mock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  taskboard: {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap',\n    [theme.breakpoints.down('sm')]: {\n      height: 'calc(100vh - 56px)'\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100vh - 64px)'\n    }\n  },\n  wrapper: {\n    width: '280px',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingRight: theme.spacing(1) / 2,\n    paddingLeft: theme.spacing(1) / 2,\n    boxSizing: 'border-box',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    height: '100%'\n  },\n  list: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%',\n    whiteSpace: 'normal',\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    borderRadius: theme.shape.borderRadius\n  },\n  header: {\n    position: 'relative',\n    flexDirection: 'row',\n    alignItems: 'center',\n    letterSpacing: '0.02rem',\n    padding: theme.spacing(1),\n    margin: 0,\n    fontWeight: 500,\n    textTransform: 'uppercase',\n    fontSize: '12px'\n  },\n  task: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    '&:last-child': {\n      marginBottom: 0\n    },\n    '&:hover': {\n      cursor: 'grab'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      border: '4px solid transparent',\n      top: 0,\n      borderTopWidth: '12px',\n      borderBottomColor: 'transparent',\n      right: '6px'\n    }\n  },\n  success: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  info: {\n    '&::after': {\n      borderTopColor: infoColor,\n      borderRightColor: infoColor,\n      borderLeftColor: infoColor\n    }\n  },\n  warning: {\n    '&::after': {\n      borderTopColor: warningColor,\n      borderRightColor: warningColor,\n      borderLeftColor: warningColor\n    }\n  },\n  danger: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  cards: {\n    position: 'relative',\n    padding: `0 ${theme.spacing(1)}px ${theme.spacing(1)}px`,\n    boxSizing: 'border-box',\n    height: '100%',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }\n}));\nconst Taskboard = () => {\n  _s();\n  const classes = useStyles();\n  const [columns, setColumns] = useState(mockTaskboard);\n  const [ordered, setOrdered] = useState(Object.keys(mockTaskboard));\n  const onDragEnd = result => {\n    // dropped nowhere\n    if (!result.destination) {\n      return;\n    }\n    const source = result.source;\n    const destination = result.destination;\n\n    // did not move anywhere - can bail early\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n\n    // reordering column\n    if (result.type === 'COLUMN') {\n      const orderedList = reorder(ordered, source.index, destination.index);\n      setOrdered(orderedList);\n      return;\n    }\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination\n    });\n    setColumns(data.quoteMap);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"taskboard\",\n      type: \"COLUMN\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: classes.taskboard,\n        children: ordered.map((key, index) => /*#__PURE__*/_jsxDEV(Column, {\n          index: index,\n          title: key,\n          tasks: columns[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(Taskboard, \"NrM1MAf5LsiBGuhsXIgFXJQAYJg=\", false, function () {\n  return [useStyles];\n});\n_c = Taskboard;\nexport default Taskboard;\nvar _c;\n$RefreshReg$(_c, \"Taskboard\");","map":{"version":3,"names":["DragDropContext","Droppable","React","useState","infoColor","warningColor","reorder","reorderQuoteMap","Column","makeStyles","mockTaskboard","jsxDEV","_jsxDEV","useStyles","theme","taskboard","overflowX","overflowY","whiteSpace","breakpoints","down","height","up","wrapper","width","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","boxSizing","display","verticalAlign","list","flexDirection","maxHeight","backgroundColor","borderRadius","shape","header","position","alignItems","letterSpacing","padding","margin","fontWeight","textTransform","fontSize","task","boxShadow","shadows","color","palette","text","primary","background","paper","marginBottom","cursor","content","border","top","borderTopWidth","borderBottomColor","right","success","borderTopColor","secondary","main","borderRightColor","borderLeftColor","info","warning","danger","cards","Taskboard","_s","classes","columns","setColumns","ordered","setOrdered","Object","keys","onDragEnd","result","destination","source","droppableId","index","type","orderedList","data","quoteMap","children","provided","ref","innerRef","droppableProps","className","map","key","title","tasks","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/grepixinfotech/Downloads/primer-react-material-design-admin/src/pages/Taskboard/Taskboard.js"],"sourcesContent":["import { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport React, { useState } from 'react';\nimport { infoColor, warningColor } from '../../styleVariables';\nimport reorder, { reorderQuoteMap } from './reorder';\n\nimport Column from './Column';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { mockTaskboard } from '../../utils/mock';\n\nconst useStyles = makeStyles(theme => ({\n  taskboard: {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap',\n    [theme.breakpoints.down('sm')]: {\n      height: 'calc(100vh - 56px)'\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100vh - 64px)'\n    }\n  },\n  wrapper: {\n    width: '280px',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingRight: theme.spacing(1) / 2,\n    paddingLeft: theme.spacing(1) / 2,\n    boxSizing: 'border-box',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    height: '100%'\n  },\n  list: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%',\n    whiteSpace: 'normal',\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    borderRadius: theme.shape.borderRadius\n  },\n  header: {\n    position: 'relative',\n    flexDirection: 'row',\n    alignItems: 'center',\n    letterSpacing: '0.02rem',\n    padding: theme.spacing(1),\n    margin: 0,\n    fontWeight: 500,\n    textTransform: 'uppercase',\n    fontSize: '12px'\n  },\n  task: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    '&:last-child': {\n      marginBottom: 0\n    },\n    '&:hover': {\n      cursor: 'grab'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      border: '4px solid transparent',\n      top: 0,\n      borderTopWidth: '12px',\n      borderBottomColor: 'transparent',\n      right: '6px'\n    }\n  },\n  success: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  info: {\n    '&::after': {\n      borderTopColor: infoColor,\n      borderRightColor: infoColor,\n      borderLeftColor: infoColor\n    }\n  },\n  warning: {\n    '&::after': {\n      borderTopColor: warningColor,\n      borderRightColor: warningColor,\n      borderLeftColor: warningColor\n    }\n  },\n  danger: {\n    '&::after': {\n      borderTopColor: theme.palette.secondary.main,\n      borderRightColor: theme.palette.secondary.main,\n      borderLeftColor: theme.palette.secondary.main\n    }\n  },\n  cards: {\n    position: 'relative',\n    padding: `0 ${theme.spacing(1)}px ${theme.spacing(1)}px`,\n    boxSizing: 'border-box',\n    height: '100%',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }\n}));\n\nconst Taskboard = () => {\n  const classes = useStyles();\n  const [columns, setColumns] = useState(mockTaskboard);\n  const [ordered, setOrdered] = useState(Object.keys(mockTaskboard));\n\n  const onDragEnd = result => {\n    // dropped nowhere\n    if (!result.destination) {\n      return;\n    }\n\n    const source = result.source;\n    const destination = result.destination;\n\n    // did not move anywhere - can bail early\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    // reordering column\n    if (result.type === 'COLUMN') {\n      const orderedList = reorder(ordered, source.index, destination.index);\n      setOrdered(orderedList);\n      return;\n    }\n\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination\n    });\n\n    setColumns(data.quoteMap);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"taskboard\" type=\"COLUMN\">\n        {provided => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            className={classes.taskboard}\n          >\n            {ordered.map((key, index) => (\n              <Column\n                key={key}\n                index={index}\n                title={key}\n                tasks={columns[key]}\n              />\n            ))}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Taskboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}